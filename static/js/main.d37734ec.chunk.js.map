{"version":3,"sources":["TodoList.js","Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["TodoList","useState","todoItems","setTodoItems","inputDesc","setInputDesc","validation","setValidation","className","onSubmit","e","preventDefault","id","Date","desc","htmlFor","type","name","value","onChange","target","handleInputChange","map","item","onClick","filter","alt","Navbar","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MAEe,SAASA,IAAY,IAAD,EACCC,mBAAS,IADV,mBAC1BC,EAD0B,KACfC,EADe,OAECF,mBAAS,IAFV,mBAE1BG,EAF0B,KAEfC,EAFe,OAGGJ,mBAAS,IAHZ,mBAG1BK,EAH0B,KAGdC,EAHc,KAiCjC,OACE,sBAAKC,UAAU,YAAf,UACE,qBAAKA,UAAU,cAAf,SACE,uBAAMC,SA/BZ,SAA4BC,GAC1BA,EAAEC,iBAEGP,GAKLD,EAAa,GAAD,mBACPD,GADO,CAEV,CACEU,GAAI,IAAIC,KACRC,KAAMV,MAGVC,EAAa,IACbE,EAAc,KAZZA,EAAc,sCA2BZ,UACE,uBAAOC,UAAU,cAAcO,QAAQ,YAAvC,+BAGA,uBACEP,UAAU,aACVQ,KAAK,OACLJ,GAAG,YACHK,KAAK,YACLC,MAAOd,EACPe,SAAU,SAACT,GAAD,OAlBpB,SAA2BA,GACzBL,EAAaK,EAAEU,OAAOF,OACtBX,EAAc,IAgBWc,CAAkBX,MAGrC,sBAAKF,UAAU,cAAf,UACE,wBAAQA,UAAU,iBAAiBQ,KAAK,SAAxC,yBAGA,qBAAKR,UAAU,kBAAf,SAAkCF,YAIxC,qBAAKE,UAAU,qBAAf,yBACA,qBAAKA,UAAU,aAAf,SACE,6BACGN,EAAUoB,KAAI,SAACC,GAAD,OACb,+BACE,sBAAMf,UAAU,mBAAhB,SAAoCe,EAAKT,OACzC,sBACEN,UAAU,mBACVgB,QAAS,kBAzCGZ,EAyCoBW,EAAKX,QAxCjDT,EAAaD,EAAUuB,QAAO,SAACF,GAAD,OAAUA,EAAKX,KAAOA,MADtD,IAA0BA,GA0CZc,IAAI,kBALA,qBC7DL,SAASC,IACtB,OACE,qBAAKnB,UAAU,SAAf,SACE,0DCOSoB,MATf,WACE,OACE,qCACE,cAACD,EAAD,IACA,cAAC3B,EAAD,QCKS6B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d37734ec.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nexport default function TodoList() {\n  const [todoItems, setTodoItems] = useState([]);\n  const [inputDesc, setInputDesc] = useState('');\n  const [validation, setValidation] = useState('');\n\n  function handleInsertSubmit(e) {\n    e.preventDefault();\n\n    if (!inputDesc) {\n      setValidation('Task description cannot be empty!');\n      return;\n    }\n\n    setTodoItems([\n      ...todoItems,\n      {\n        id: new Date(),\n        desc: inputDesc,\n      },\n    ]);\n    setInputDesc('');\n    setValidation('');\n  }\n\n  function handleDeleteTask(id) {\n    setTodoItems(todoItems.filter((item) => item.id !== id));\n  }\n\n  function handleInputChange(e) {\n    setInputDesc(e.target.value);\n    setValidation('');\n  }\n\n  return (\n    <div className=\"todo-list\">\n      <div className=\"insert-form\">\n        <form onSubmit={handleInsertSubmit}>\n          <label className=\"input-label\" htmlFor=\"task-desc\">\n            Task description:\n          </label>\n          <input\n            className=\"input-text\"\n            type=\"text\"\n            id=\"task-desc\"\n            name=\"task-desc\"\n            value={inputDesc}\n            onChange={(e) => handleInputChange(e)}\n          />\n\n          <div className=\"form-footer\">\n            <button className=\"btn btn-submit\" type=\"submit\">\n              Insert task\n            </button>\n            <div className=\"form-validation\">{validation}</div>\n          </div>\n        </form>\n      </div>\n      <div className=\"filter-form hidden\">filter-form</div>\n      <div className=\"list-items\">\n        <ul>\n          {todoItems.map((item) => (\n            <li key=\"item.id\">\n              <span className=\"item-description\">{item.desc}</span>\n              <span\n                className=\"icon icon-delete\"\n                onClick={() => handleDeleteTask(item.id)}\n                alt=\"delete task\"\n              ></span>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function Navbar() {\n  return (\n    <div className=\"navbar\">\n      <h1>Personal TODO List App</h1>\n    </div>\n  );\n}\n","import TodoList from './TodoList.js';\nimport Navbar from './Navbar.js'; // TODO\n\nfunction App() {\n  return (\n    <>\n      <Navbar />\n      <TodoList />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}