{"version":3,"sources":["InsertForm.js","ListItems.js","TodoList.js","Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["InsertForm","props","className","onSubmit","onInsertSubmit","htmlFor","type","id","name","value","inputDesc","onChange","onInputChange","validation","classname","onCategoryChange","ListItems","todoItems","length","filter","item","category","selectedCategory","map","desc","onClick","onDeleteTask","alt","onDeleteAll","TodoList","useState","setTodoItems","setInputDesc","setSelectedCategory","setValidation","useEffect","JSON","parse","localStorage","getItem","setItem","stringify","e","preventDefault","todoItemsNew","Date","now","target","Navbar","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e16bd165.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function InsertForm(props) {\n  return (\n    <div className=\"insert-form\">\n      <form onSubmit={props.onInsertSubmit}>\n        <label className=\"input-label\" htmlFor=\"task-desc\">\n          Task description:\n        </label>\n        <input\n          className=\"input-text\"\n          type=\"text\"\n          id=\"task-desc\"\n          name=\"task-desc\"\n          value={props.inputDesc}\n          onChange={props.onInputChange}\n        />\n\n        <div className=\"form-validation\">{props.validation}</div>\n\n        <div className=\"form-footer\">\n          <label classname=\"input-label\" htmlFor=\"cat-sel\">\n            Select list:\n          </label>\n          <select\n            id=\"cat-sel\"\n            className=\"category-selector\"\n            onChange={props.onCategoryChange}\n          >\n            <option value=\"main\">default</option>\n            <option value=\"shopping\">shopping</option>\n            <option value=\"coding\">coding</option>\n          </select>\n          <button className=\"btn btn-submit\" type=\"submit\">\n            Insert task\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function ListItems(props) {\n  if (props.todoItems.length > 0) {\n    return (\n      <div className=\"list-items\">\n        <ul>\n          {props.todoItems\n            .filter((item) => item.category === props.selectedCategory)\n            .map((item) => (\n              <li key={item.id}>\n                <span className=\"item-description\">{item.desc}</span>\n                <span\n                  className=\"icon icon-delete\"\n                  onClick={() => props.onDeleteTask(item.id)}\n                  alt=\"delete task\"\n                ></span>\n              </li>\n            ))}\n        </ul>\n        <div className=\"list-footer\">\n          <button className=\"btn btn-danger\" onClick={props.onDeleteAll}>\n            delete all tasks\n          </button>\n        </div>\n      </div>\n    );\n  } else {\n    return null;\n  }\n}\n","import React, { useState, useEffect } from 'react';\nimport InsertForm from './InsertForm.js';\nimport ListItems from './ListItems.js';\n\nexport default function TodoList() {\n  const [todoItems, setTodoItems] = useState([]);\n  const [inputDesc, setInputDesc] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState('default');\n  const [validation, setValidation] = useState(true);\n\n  // load data from localstorage on first run\n  useEffect(() => {\n    setTodoItems(JSON.parse(localStorage.getItem('todoList')) || []);\n  }, []);\n\n  // store updated data to localstorage\n  useEffect(() => {\n    localStorage.setItem('todoList', JSON.stringify(todoItems));\n  }, [todoItems]);\n\n  function handleInsertSubmit(e) {\n    e.preventDefault();\n\n    if (!inputDesc) {\n      setValidation('Task description cannot be empty!');\n      return;\n    }\n\n    const todoItemsNew = [\n      ...todoItems,\n      {\n        id: Date.now(),\n        desc: inputDesc,\n        category: selectedCategory,\n      },\n    ];\n    setTodoItems(todoItemsNew);\n    setInputDesc('');\n    setValidation('');\n  }\n\n  function handleDeleteTask(id) {\n    const todoItemsNew = todoItems.filter((item) => item.id !== id);\n    setTodoItems(todoItemsNew);\n  }\n\n  function handleDeleteAll() {\n    setTodoItems([]);\n  }\n\n  function handleInputChange(e) {\n    setInputDesc(e.target.value);\n    setValidation('');\n  }\n\n  function handleCategoryChange(e) {\n    setSelectedCategory(e.target.value);\n  }\n\n  return (\n    <div className=\"todo-list\">\n      <InsertForm\n        inputDesc={inputDesc}\n        validation={validation}\n        onInsertSubmit={handleInsertSubmit}\n        onInputChange={handleInputChange}\n        onCategoryChange={handleCategoryChange}\n      />\n\n      <div className=\"filter-form hidden\">filter-form</div>\n\n      <ListItems\n        todoItems={todoItems}\n        selectedCategory={selectedCategory}\n        onDeleteTask={handleDeleteTask}\n        onDeleteAll={handleDeleteAll}\n      />\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function Navbar() {\n  return (\n    <div className=\"navbar\">\n      <h1>Personal TODO List App</h1>\n    </div>\n  );\n}\n","import TodoList from './TodoList.js';\nimport Navbar from './Navbar.js'; // TODO\n\nfunction App() {\n  return (\n    <>\n      <Navbar />\n      <TodoList />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}